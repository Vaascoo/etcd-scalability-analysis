---

- hosts: external
  become: yes
  become_user: root
  remote_user: ubuntu

  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
    - name: Create a list of nodes
      set_fact:
        node_list: "{{ node_list | default([]) + [ 'http://' + hostvars[item].ansible_host + ':2379'] }}"
      with_items: "{{ groups['targets'] }}"  # Replace 'your_group_name' with the actual group name from your inventory.

    - name: Format the list of nodes
      set_fact:
        formatted_node_list: "{{ node_list | join(',') }}"  # Replace 'your_group_name' with the actual group name from your inventory.

    - name: Create a list of URLs
      set_fact:
        url_list: "{{ url_list | default([]) + [ hostvars[item].inventory_hostname + '=http://' + hostvars[item].inventory_hostname + ':2380'] }}"
      with_items: "{{ groups['targets'] }}"  # Replace 'your_group_name' with the actual group name from your inventory.

    - name: Format the list of URLs
      set_fact:
        formatted_url_list: "{{ url_list | join(',') }}"  # Replace 'your_group_name' with the actual group name from your inventory.

    - name: Print the url list
      debug:
        var: formatted_url_list

    - name: Deploy hosts file
      template:
        src: ../templates/hosts.j2
        dest: /etc/hosts

    - name: Stop all containers
      shell:
        cmd: docker container stop `docker container ps -a -q` || exit 0

    - name: Run container
      shell:
        cmd: |
          docker run --mount "type=bind,source=/mnt,target=/wal" -d -p "2379:2379" -p "2380:2380" -e GOGC=100 \
          gcr.io/etcd-development/etcd:v3.5.9 \
          etcd \
          --name {{ inventory_hostname[:-9] }} \
          --snapshot-count=100000 \
          --backend-batch-limit=10000 \
          --data-dir=/wal/data \
          --wal-dir=/wal/wal \
          --initial-advertise-peer-urls=http://{{ inventory_hostname[:-9] }}:2380 \
          --advertise-client-urls=http://{{ inventory_hostname[:-9] }}:2379 \
          --listen-client-urls=http://0.0.0.0:2379 \
          --listen-peer-urls=http://0.0.0.0:2380 \
          --initial-cluster={{ formatted_url_list }} \
          --initial-cluster-state=new \
          --initial-cluster-token=etcd-cluster

    - name: Output nodes.sh
      delegate_to: localhost
      become: no
      shell: |
        cat <<EOF > ../nodes.sh
        export ETCDCTL_API=3
        export ENDPOINTS={{ formatted_node_list }}
        EOF
